// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stitcher/stitcher.proto

package stitcher

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Extend struct {
	MessageType          string   `protobuf:"bytes,861001,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Extend) Reset()         { *m = Extend{} }
func (m *Extend) String() string { return proto.CompactTextString(m) }
func (*Extend) ProtoMessage()    {}
func (*Extend) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d87ad0535346e0f, []int{0}
}

func (m *Extend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Extend.Unmarshal(m, b)
}
func (m *Extend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Extend.Marshal(b, m, deterministic)
}
func (m *Extend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extend.Merge(m, src)
}
func (m *Extend) XXX_Size() int {
	return xxx_messageInfo_Extend.Size(m)
}
func (m *Extend) XXX_DiscardUnknown() {
	xxx_messageInfo_Extend.DiscardUnknown(m)
}

var xxx_messageInfo_Extend proto.InternalMessageInfo

func (m *Extend) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

type Service struct {
	MethodName           string   `protobuf:"bytes,871001,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	Args                 string   `protobuf:"bytes,871002,opt,name=args,proto3" json:"args,omitempty"`
	Parameter            string   `protobuf:"bytes,871003,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Bulk                 bool     `protobuf:"varint,871004,opt,name=bulk,proto3" json:"bulk,omitempty"`
	ResolveIf            string   `protobuf:"bytes,871005,opt,name=resolve_if,json=resolveIf,proto3" json:"resolve_if,omitempty"`
	ReturnType           string   `protobuf:"bytes,871006,opt,name=return_type,json=returnType,proto3" json:"return_type,omitempty"`
	ServiceName          string   `protobuf:"bytes,871007,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	GoPackage            string   `protobuf:"bytes,871008,opt,name=go_package,json=goPackage,proto3" json:"go_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d87ad0535346e0f, []int{1}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *Service) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

func (m *Service) GetParameter() string {
	if m != nil {
		return m.Parameter
	}
	return ""
}

func (m *Service) GetBulk() bool {
	if m != nil {
		return m.Bulk
	}
	return false
}

func (m *Service) GetResolveIf() string {
	if m != nil {
		return m.ResolveIf
	}
	return ""
}

func (m *Service) GetReturnType() string {
	if m != nil {
		return m.ReturnType
	}
	return ""
}

func (m *Service) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Service) GetGoPackage() string {
	if m != nil {
		return m.GoPackage
	}
	return ""
}

type Value struct {
	Logic                string   `protobuf:"bytes,881001,opt,name=logic,proto3" json:"logic,omitempty"`
	Source               string   `protobuf:"bytes,881002,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d87ad0535346e0f, []int{2}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetLogic() string {
	if m != nil {
		return m.Logic
	}
	return ""
}

func (m *Value) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

var E_Service = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*Service)(nil),
	Field:         840001,
	Name:          "stitcher.service",
	Tag:           "bytes,840001,opt,name=service",
	Filename:      "stitcher/stitcher.proto",
}

var E_FieldExtend = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*Extend)(nil),
	Field:         841002,
	Name:          "stitcher.field_extend",
	Tag:           "bytes,841002,opt,name=field_extend",
	Filename:      "stitcher/stitcher.proto",
}

var E_Value = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*Value)(nil),
	Field:         841003,
	Name:          "stitcher.value",
	Tag:           "bytes,841003,opt,name=value",
	Filename:      "stitcher/stitcher.proto",
}

var E_Root = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         851001,
	Name:          "stitcher.root",
	Tag:           "varint,851001,opt,name=root",
	Filename:      "stitcher/stitcher.proto",
}

var E_Request = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         851002,
	Name:          "stitcher.request",
	Tag:           "varint,851002,opt,name=request",
	Filename:      "stitcher/stitcher.proto",
}

var E_Extend = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*Extend)(nil),
	Field:         851003,
	Name:          "stitcher.extend",
	Tag:           "bytes,851003,opt,name=extend",
	Filename:      "stitcher/stitcher.proto",
}

func init() {
	proto.RegisterType((*Extend)(nil), "stitcher.Extend")
	proto.RegisterType((*Service)(nil), "stitcher.Service")
	proto.RegisterType((*Value)(nil), "stitcher.Value")
	proto.RegisterExtension(E_Service)
	proto.RegisterExtension(E_FieldExtend)
	proto.RegisterExtension(E_Value)
	proto.RegisterExtension(E_Root)
	proto.RegisterExtension(E_Request)
	proto.RegisterExtension(E_Extend)
}

func init() { proto.RegisterFile("stitcher/stitcher.proto", fileDescriptor_0d87ad0535346e0f) }

var fileDescriptor_0d87ad0535346e0f = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcb, 0x6a, 0x14, 0x41,
	0x14, 0x25, 0x92, 0xcc, 0x24, 0x77, 0x02, 0x6a, 0x21, 0x5a, 0x08, 0x3a, 0xe3, 0xb8, 0xc9, 0x66,
	0xba, 0xc1, 0x31, 0x0b, 0x3b, 0x88, 0x20, 0x18, 0x10, 0x9f, 0x8c, 0xc1, 0x85, 0x9b, 0xa6, 0xa6,
	0xe7, 0x4e, 0x4d, 0x93, 0xee, 0xae, 0xb6, 0x1e, 0x83, 0xd9, 0xfa, 0x0d, 0x7e, 0x81, 0xcb, 0xf8,
	0x05, 0xea, 0xca, 0x8d, 0xe0, 0x27, 0xf8, 0x16, 0x77, 0xfa, 0x05, 0x59, 0x4a, 0xd7, 0x23, 0xb3,
	0x10, 0x19, 0x77, 0x75, 0xcf, 0x3d, 0xe7, 0xd4, 0xa9, 0x7b, 0xbb, 0xe1, 0x9c, 0xd2, 0xb9, 0xce,
	0x66, 0x28, 0xe3, 0x70, 0x88, 0x6a, 0x29, 0xb4, 0x20, 0xeb, 0xa1, 0x3e, 0xdf, 0xe3, 0x42, 0xf0,
	0x02, 0x63, 0x8b, 0x8f, 0xcd, 0x34, 0x9e, 0xa0, 0xca, 0x64, 0x5e, 0x6b, 0xe1, 0xb9, 0xfd, 0x01,
	0xb4, 0x6e, 0x3d, 0xd3, 0x58, 0x4d, 0xc8, 0x65, 0xd8, 0x2c, 0x51, 0x29, 0xc6, 0x31, 0xd5, 0x07,
	0x35, 0xd2, 0x0f, 0xef, 0xaf, 0xf6, 0x56, 0xb6, 0x36, 0x46, 0x1d, 0x8f, 0xee, 0x1d, 0xd4, 0xd8,
	0x7f, 0x7e, 0x02, 0xda, 0x8f, 0x50, 0xce, 0xf3, 0x0c, 0xc9, 0x25, 0xe8, 0x94, 0xa8, 0x67, 0x62,
	0x92, 0x56, 0xac, 0x44, 0xfa, 0xf1, 0xc5, 0xb6, 0xe5, 0x83, 0x03, 0xef, 0xb3, 0x12, 0xc9, 0x19,
	0x58, 0x65, 0x92, 0x2b, 0xfa, 0xc9, 0xf7, 0x6c, 0x45, 0x2e, 0xc2, 0x46, 0xcd, 0x24, 0x2b, 0x51,
	0xa3, 0xa4, 0x9f, 0x7d, 0x6b, 0x01, 0x35, 0xaa, 0xb1, 0x29, 0xf6, 0xe9, 0x17, 0xdb, 0x5a, 0x1f,
	0xd9, 0x8a, 0x74, 0x01, 0x24, 0x2a, 0x51, 0xcc, 0x31, 0xcd, 0xa7, 0xf4, 0x6b, 0x90, 0x79, 0xec,
	0xf6, 0xb4, 0xc9, 0x23, 0x51, 0x1b, 0x59, 0xb9, 0xfc, 0xdf, 0x42, 0x1e, 0x07, 0x36, 0xf1, 0x9b,
	0x37, 0x2a, 0x97, 0xde, 0x65, 0xfe, 0xee, 0x39, 0x1d, 0x8f, 0xda, 0xd0, 0x5d, 0x00, 0x2e, 0xd2,
	0x9a, 0x65, 0xfb, 0x8c, 0x23, 0xfd, 0x11, 0x2e, 0xe2, 0xe2, 0xa1, 0x83, 0xfa, 0xd7, 0x60, 0xed,
	0x31, 0x2b, 0x0c, 0x92, 0xb3, 0xb0, 0x56, 0x08, 0x9e, 0x67, 0xf4, 0xd7, 0x4f, 0x47, 0x72, 0x25,
	0xa1, 0xd0, 0x52, 0xc2, 0xc8, 0x0c, 0xe9, 0x6f, 0xdf, 0xf0, 0x75, 0x72, 0x17, 0xda, 0xfe, 0x2a,
	0x72, 0x21, 0x72, 0xcb, 0x89, 0xc2, 0x72, 0xa2, 0xdd, 0x1c, 0x8b, 0xc9, 0x83, 0x5a, 0xe7, 0xa2,
	0x52, 0xf4, 0xdd, 0xcb, 0x61, 0x6f, 0x65, 0xab, 0x73, 0xe5, 0x74, 0x74, 0xbc, 0x5d, 0x3f, 0xf8,
	0x51, 0xb0, 0x48, 0xf6, 0x60, 0x73, 0xda, 0x68, 0x52, 0x74, 0x2b, 0x5c, 0x62, 0x79, 0x78, 0xe8,
	0x2c, 0x4f, 0x2d, 0x2c, 0xdd, 0xee, 0x47, 0x1d, 0x6b, 0xe3, 0x8a, 0x64, 0x17, 0xd6, 0xe6, 0xf6,
	0x79, 0x4b, 0xec, 0x5e, 0x79, 0xbb, 0x93, 0x0b, 0x3b, 0x3b, 0x96, 0x91, 0x93, 0x27, 0xdb, 0xb0,
	0x2a, 0x85, 0xd0, 0xa4, 0xfb, 0x97, 0xcd, 0x3d, 0xf7, 0x45, 0x05, 0xa3, 0xd7, 0x47, 0x43, 0xb7,
	0xe7, 0x86, 0x9e, 0xec, 0x40, 0x5b, 0xe2, 0x53, 0x83, 0xea, 0x3f, 0x94, 0x6f, 0xbc, 0x32, 0x28,
	0x92, 0x3b, 0xd0, 0xf2, 0xb3, 0x58, 0xaa, 0x7d, 0x7b, 0xf4, 0xaf, 0x69, 0x78, 0x8b, 0x9b, 0x37,
	0x9e, 0x5c, 0xe7, 0xb9, 0x9e, 0x99, 0x71, 0x94, 0x89, 0x32, 0x96, 0x86, 0x55, 0x7c, 0xc0, 0x8d,
	0x34, 0xb1, 0xe4, 0x03, 0x8e, 0x95, 0x35, 0x8e, 0x2d, 0x57, 0xe5, 0xa2, 0x3a, 0xfe, 0x0b, 0x77,
	0xc2, 0x61, 0xdc, 0xb2, 0x94, 0xe1, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x05, 0x8d, 0xb0,
	0xaa, 0x03, 0x00, 0x00,
}
