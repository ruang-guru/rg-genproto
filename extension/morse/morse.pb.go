// Code generated by protoc-gen-go. DO NOT EDIT.
// source: morse.proto

package morse // import "github.com/ruang-guru/rg-genproto/extension/morse"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseType int32

const (
	ResponseType_Object ResponseType = 0
	ResponseType_Array  ResponseType = 1
)

var ResponseType_name = map[int32]string{
	0: "Object",
	1: "Array",
}
var ResponseType_value = map[string]int32{
	"Object": 0,
	"Array":  1,
}

func (x ResponseType) String() string {
	return proto.EnumName(ResponseType_name, int32(x))
}
func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_morse_ac9ee58c1a18ca15, []int{0}
}

var E_Data = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*ResponseType)(nil),
	Field:         2000,
	Name:          "morse.api.response.data",
	Tag:           "varint,2000,opt,name=data,enum=morse.api.response.ResponseType",
	Filename:      "morse.proto",
}

func init() {
	proto.RegisterEnum("morse.api.response.ResponseType", ResponseType_name, ResponseType_value)
	proto.RegisterExtension(E_Data)
}

func init() { proto.RegisterFile("morse.proto", fileDescriptor_morse_ac9ee58c1a18ca15) }

var fileDescriptor_morse_ac9ee58c1a18ca15 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8e, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x86, 0x3d, 0xd0, 0x03, 0xa3, 0xe8, 0x91, 0x4a, 0x2c, 0x64, 0x1b, 0x41, 0x84, 0x9b, 0x80,
	0x16, 0xa2, 0x56, 0xda, 0xcb, 0xc2, 0xa2, 0x8d, 0x5d, 0xb2, 0x3b, 0x66, 0x23, 0x6e, 0x26, 0x4c,
	0x26, 0xe0, 0xbe, 0xa5, 0x8f, 0x24, 0x64, 0x15, 0x04, 0x9b, 0x81, 0x61, 0xfe, 0xf9, 0xbe, 0x5f,
	0x1d, 0x4c, 0xc4, 0x19, 0x21, 0x31, 0x09, 0x69, 0xbd, 0x2c, 0x36, 0x05, 0x60, 0xcc, 0x89, 0x62,
	0xc6, 0xd3, 0xc6, 0x13, 0xf9, 0x0f, 0x34, 0x35, 0xe1, 0xca, 0x9b, 0x19, 0x30, 0xf7, 0x1c, 0x92,
	0x10, 0x2f, 0x5f, 0x97, 0xe7, 0xea, 0xb0, 0xfb, 0x49, 0x3f, 0xcf, 0x09, 0xb5, 0x52, 0xeb, 0xd6,
	0xbd, 0x63, 0x2f, 0x9b, 0x1d, 0xbd, 0xaf, 0xf6, 0x1e, 0x98, 0xed, 0xbc, 0x59, 0xdd, 0xbd, 0xa8,
	0xdd, 0xc1, 0x8a, 0xd5, 0x67, 0xb0, 0x10, 0xe1, 0x97, 0x08, 0x4f, 0x28, 0x23, 0x0d, 0x6d, 0x92,
	0x40, 0x31, 0x9f, 0x7c, 0x1d, 0x37, 0xab, 0x8b, 0xa3, 0xab, 0x06, 0xfe, 0x97, 0x81, 0xbf, 0x9e,
	0xae, 0xe2, 0x1e, 0x6f, 0x5f, 0x6f, 0x7c, 0x90, 0xb1, 0x38, 0xe8, 0x69, 0x32, 0x5c, 0x6c, 0xf4,
	0x5b, 0x5f, 0xb8, 0x18, 0xf6, 0x5b, 0x8f, 0xb1, 0x4a, 0x0c, 0x7e, 0x0a, 0xc6, 0x1c, 0x28, 0x9a,
	0x0a, 0xbd, 0xaf, 0xd3, 0xad, 0xeb, 0xf1, 0xfa, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x93, 0xd4,
	0x30, 0x04, 0x01, 0x00, 0x00,
}
